<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>앤기브마케팅 대시보드</title>

    {{>layouts/meta}}

    <style>
        @import url('https://cdn.jsdelivr.net/gh/fonts-archive/Paperlogy/Paperlogy.css');

        * {
            font-family: 'Paperlogy', sans-serif;
        }

        body {
            background-color: #f5f7fa;
            color: #333;
            padding: 20px;
        }

        .main-content {
            max-width: 1600px;
            margin: 0 auto;
        }

        /* 통계 카드 */
        .stats-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .stats-container .stat-card {
            background: white;
            border-radius: 15px;
            padding: 25px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
            transition: all 0.3s ease;
        }

        .stats-container .stat-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
        }

        .stats-container .stat-inner {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .stats-container .text-group .txt {
            font-size: 15px;
            font-weight: 700;
            color: #6b7280;
            margin-bottom: 5px;
        }

        .stats-container .text-group .tit {
            font-weight: 700;
            font-size: 28px;
            margin: 0;
            color: #1f2937;
        }

        .stats-container .stat-icon {
            display: flex;
            border-radius: 50%;
            width: 55px;
            height: 55px;
            justify-content: center;
            align-items: center;
        }

        .stats-container .stat-icon.green {
            background-color: rgba(209, 250, 229, 1);
        }

        .stats-container .stat-icon.green i {
            color: #03c75a;
            font-size: 22px;
        }

        .stats-container .stat-icon.blue {
            background-color: rgba(219, 234, 254, 1);
        }

        .stats-container .stat-icon.blue i {
            color: #3b82f6;
            font-size: 22px;
        }

        .stats-container .stat-icon.dark {
            background-color: rgba(243, 244, 246, 1);
        }

        .stats-container .stat-icon.dark i {
            color: #6b7280;
            font-size: 22px;
        }

        /* 섹션 헤더 */
        .section-header-group {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 25px;
            flex-wrap: wrap;
            gap: 15px;
        }

        .section-header-group .tit {
            font-size: 24px;
            font-weight: 700;
            color: #1f2937;
            margin: 0;
        }

        .section-header-group .section-controls {
            display: flex;
            gap: 15px;
            align-items: center;
            flex-wrap: wrap;
        }

        .section-header-group .project-add-button {
            background: linear-gradient(135deg, #020ee2, #5d66ff);
            color: white;
            border: none;
            border-radius: 10px;
            padding: 12px 20px;
            font-weight: 600;
            font-size: 14px;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 4px 10px rgba(2, 14, 226, 0.2);
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .section-header-group .project-add-button:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 15px rgba(2, 14, 226, 0.3);
        }

        /* 필터 및 검색 */

        .filter-group-container {
            background: #fff;
            border-radius: 15px;
            box-shadow: 0 3px 10px rgba(0, 0, 0, 0.05);
            margin-bottom: 25px;
            display: flex;
            flex-direction: column;
            padding: 20px 25px;
        }

        /* 라벨 */
        .filter-group-container > label {
            color: #4b5563;
            font-size: 14px;
            font-weight: 600;
            margin-bottom: 8px;
        }

        /* 드롭다운 토글 */
        .filter-group-container .dropdown-toggle {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 10px 15px;
            background: #fff;
            border: 1px solid #e2e8f0;
            border-radius: 8px;
            cursor: pointer;
            font-size: 14px;
            color: #374151;
            transition: all .25s ease;
            min-height: 42px;
        }

        /* 선택된 텍스트 */
        .filter-group-container .dropdown-toggle .selected-option {
            line-height: 1;
        }

        /* 화살표 아이콘 */
        .filter-group-container .dropdown-toggle .fa-chevron-down {
            transition: transform .3s ease;
            color: #9ca3af;
        }

        .filter-search-container {
            background: white;
            border-radius: 15px;
            box-shadow: 0 3px 10px rgba(0, 0, 0, 0.05);
            margin-bottom: 25px;
        }

        .filter-search-container .filter-container {
            padding: 20px 25px;
            border-bottom: 1px solid #f1f5f9;
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 20px;
        }

        .filter-search-container .filter-item {
            display: flex;
            flex-direction: column;
        }

        .filter-search-container .filter-item label {
            color: #4b5563;
            font-size: 14px;
            font-weight: 600;
            margin-bottom: 8px;
        }

        .filter-search-container .custom-dropdown {
            position: relative;
            width: 100%;
            user-select: none;
        }

        .filter-search-container .dropdown-toggle {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 10px 15px;
            background: white;
            border: 1px solid #e2e8f0;
            border-radius: 8px;
            cursor: pointer;
            font-size: 14px;
            color: #374151;
            transition: all 0.25s ease;
            min-height: 42px;
        }

        .filter-search-container .dropdown-toggle:hover {
            border-color: #020ee2;
            background-color: #f8faff;
        }

        .filter-search-container .dropdown-toggle i {
            transition: transform 0.3s ease;
            color: #9ca3af;
        }

        .filter-search-container .dropdown-toggle.active i {
            transform: rotate(180deg);
        }

        .filter-search-container .dropdown-toggle.error {
            border-color: #ef4444;
            box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1);
        }

        .filter-search-container .dropdown-menu {
            position: absolute;
            top: calc(100% + 5px);
            left: 0;
            width: 100%;
            background: white;
            border: 1px solid #e2e8f0;
            border-radius: 8px;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
            z-index: 100;
            max-height: 0;
            overflow: hidden auto;
            opacity: 0;
            transition: all 0.3s ease;
        }

        .filter-search-container .dropdown-menu.show {
            max-height: 200px;
            opacity: 1;
            padding: 8px 0;
        }

        .filter-search-container .dropdown-item {
            padding: 10px 15px;
            cursor: pointer;
            font-size: 14px;
            transition: all 0.2s ease;
            color: #374151;
        }

        .filter-search-container .dropdown-item:hover {
            background: #f8faff;
            color: #020ee2;
        }

        .filter-search-container .dropdown-item.selected {
            background: rgba(2, 14, 226, 0.1);
            color: #020ee2;
            font-weight: 600;
        }

        .filter-search-container .search-container {
            padding: 20px 25px;
        }

        .filter-search-container .search-input-wrapper {
            position: relative;
            width: 100%;
        }

        .filter-search-container .search-input {
            width: 100%;
            padding: 12px 15px 12px 40px;
            border-radius: 8px;
            border: 1px solid #e2e8f0;
            background-color: white;
            font-size: 14px;
            color: #374151;
            transition: all 0.25s ease;
        }

        .filter-search-container .search-icon {
            position: absolute;
            left: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: #9ca3af;
            font-size: 14px;
        }

        .filter-search-container .search-input:hover {
            border-color: #020ee2;
            background-color: #f8faff;
        }

        .filter-search-container .search-input:focus {
            outline: none;
            border-color: #020ee2;
            box-shadow: 0 0 0 3px rgba(2, 14, 226, 0.1);
        }

        /* 완료 프로젝트 제외 토글 */
        .exclude-completed-toggle {
            background: white;
            border-radius: 15px;
            box-shadow: 0 3px 10px rgba(0, 0, 0, 0.05);
            margin-bottom: 25px;
            padding: 20px 25px;
            display: none;
        }

        .exclude-completed-toggle.show {
            display: flex;
            align-items: center;
            justify-content: flex-end;
        }

        .exclude-completed-toggle .toggle-wrapper {
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .exclude-completed-toggle .toggle-label {
            font-size: 14px;
            font-weight: 600;
            color: #374151;
        }

        .exclude-completed-toggle .toggle-switch {
            position: relative;
            width: 44px;
            height: 24px;
            background: #e2e8f0;
            border-radius: 12px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .exclude-completed-toggle .toggle-switch.active {
            background: #020ee2;
        }

        .exclude-completed-toggle .toggle-switch::after {
            content: '';
            position: absolute;
            top: 2px;
            left: 2px;
            width: 20px;
            height: 20px;
            background: white;
            border-radius: 50%;
            transition: all 0.3s ease;
        }

        .exclude-completed-toggle .toggle-switch.active::after {
            left: 22px;
        }

        /* 프로젝트 그룹 모달 */
        .project-group-modal {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.5);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 1100;
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s ease;
        }

        .project-group-modal.show {
            opacity: 1;
            visibility: visible;
        }

        .project-group-modal .project-group-modal-content {
            background: white;
            border-radius: 16px;
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.15);
            transform: translateY(-20px);
            transition: all 0.3s ease;
            max-height: 90vh;
            overflow-y: auto;
            width: 90%;
            max-width: 650px;
        }

        .project-group-modal.show .project-group-modal-content {
            transform: translateY(0);
        }

        .project-group-modal .project-group-modal-header {
            padding: 25px 30px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-bottom: 1px solid #f1f5f9;
        }

        .project-group-modal .project-group-modal-title {
            font-size: 20px;
            font-weight: 700;
            color: #1f2937;
            margin: 0;
        }

        .project-group-modal .project-group-modal-search {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .project-group-modal .project-group-search-wrapper {
            position: relative;
            width: 200px;
        }

        .project-group-modal .project-group-search-input {
            width: 100%;
            padding: 8px 12px 8px 35px;
            border-radius: 8px;
            border: 1px solid #e2e8f0;
            background-color: white;
            font-size: 14px;
            color: #374151;
            transition: all 0.25s ease;
        }

        .project-group-modal .project-group-search-input:focus {
            outline: none;
            border-color: #020ee2;
            box-shadow: 0 0 0 3px rgba(2, 14, 226, 0.1);
        }

        .project-group-modal .project-group-search-icon {
            position: absolute;
            left: 12px;
            top: 50%;
            transform: translateY(-50%);
            color: #9ca3af;
            font-size: 14px;
            cursor: pointer;
        }

        .project-group-modal .project-group-modal-close {
            background: transparent;
            border: none;
            font-size: 24px;
            color: #9ca3af;
            cursor: pointer;
            padding: 0;
            line-height: 1;
            width: 32px;
            height: 32px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 6px;
            transition: all 0.2s ease;
        }

        .project-group-modal .project-group-modal-close:hover {
            background: #f3f4f6;
            color: #374151;
        }

        .project-group-modal .project-group-modal-body {
            padding: 30px;
        }

        .project-group-modal .project-group-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 16px;
        }

        .project-group-modal .project-group-card {
            padding: 20px;
            border: 2px solid #e5e7eb;
            border-radius: 12px;
            cursor: pointer;
            transition: all 0.3s ease;
            text-align: center;
            background: white;
        }

        .project-group-modal .project-group-card:hover {
            border-color: #3b82f6;
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(59, 130, 246, 0.15);
        }

        .project-group-modal .project-group-card.selected {
            border-color: #3b82f6;
            background-color: #eff6ff;
        }

        .project-group-modal .project-group-name {
            font-size: 17px;
            font-weight: 500;
            color: #1f2937;
            margin-bottom: 4px;
        }

        .project-group-modal .project-group-count {
            font-size: 15px;
            color: #6b7280;
        }

        /* 스켈레톤 로딩 */
        .skeleton-container {
            display: none;
            margin-bottom: 20px;
        }

        .skeleton-container.show {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
            gap: 20px;
        }

        .skeleton-container .skeleton-card {
            background: white;
            border-radius: 15px;
            padding: 25px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
            position: relative;
            overflow: hidden;
        }

        .skeleton-container .skeleton-line {
            height: 20px;
            background: #f0f0f0;
            border-radius: 4px;
            margin-bottom: 15px;
            position: relative;
            overflow: hidden;
        }

        .skeleton-container .skeleton-line::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.6), transparent);
            animation: shimmer 1.5s infinite;
        }

        .skeleton-container .skeleton-line.short {
            width: 60%;
        }

        .skeleton-container .skeleton-line.medium {
            width: 80%;
        }

        .skeleton-container .skeleton-line.full {
            width: 100%;
        }

        .skeleton-container .skeleton-badge {
            height: 30px;
            width: 100px;
            background: #f0f0f0;
            border-radius: 20px;
            margin-bottom: 15px;
            position: relative;
            overflow: hidden;
        }

        .skeleton-container .skeleton-badge::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.6), transparent);
            animation: shimmer 1.5s infinite;
        }

        .skeleton-container .skeleton-progress {
            height: 8px;
            background: #f0f0f0;
            border-radius: 4px;
            margin-bottom: 15px;
            position: relative;
            overflow: hidden;
        }

        .skeleton-container .skeleton-progress::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.6), transparent);
            animation: shimmer 1.5s infinite;
        }

        @keyframes shimmer {
            0% {
                transform: translateX(-100%);
            }
            100% {
                transform: translateX(100%);
            }
        }

        /* 그리드 뷰 */
        .cards-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .cards-grid.hidden {
            display: none;
        }

        .cards-grid .project-card {
            background: white;
            border-radius: 15px;
            padding: 25px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
            transition: all 0.4s cubic-bezier(0.165, 0.84, 0.44, 1);
            cursor: pointer;
            overflow: hidden;
            border: 1px solid rgba(0, 0, 0, 0.03);
            position: relative;
        }

        .cards-grid .project-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
        }

        .cards-grid .card-header {
            display: flex;
            align-items: center;
            margin-bottom: 18px;
        }

        .cards-grid .card-number {
            background: rgba(2, 14, 226, 0.08);
            color: #020ee2;
            width: 40px;
            height: 40px;
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 700;
            font-size: 16px;
            margin-right: 15px;
        }

        .cards-grid .project-name {
            font-size: 18px;
            font-weight: 700;
            color: #1f2937;
            line-height: 1.3;
            margin: 0;
        }

        .cards-grid .status-badges {
            display: flex;
            gap: 10px;
            margin-bottom: 20px;
            flex-wrap: wrap;
        }

        .cards-grid .status-badge {
            padding: 8px 16px;
            border-radius: 25px;
            font-size: 13px;
            font-weight: 600;
            letter-spacing: 0.5px;
        }

        .cards-grid .status-ongoing {
            background: linear-gradient(145deg, #e3f7eb, #d0ffe0);
            color: #00a847;
        }

        .cards-grid .status-paused {
            background: linear-gradient(145deg, #fef3c7, #fde68a);
            color: #d97706;
        }

        .cards-grid .status-completed {
            background: linear-gradient(145deg, #f3f4f6, #e5e7eb);
            color: #6b7280;
        }

        .cards-grid .status-canceled {
            background: linear-gradient(145deg, #fee2e2, #fecaca);
            color: #dc2626;
        }

        .cards-grid .progress-section {
            margin-bottom: 20px;
        }

        .cards-grid .progress-info {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 8px;
        }

        .cards-grid .progress-text {
            font-size: 14px;
            color: #6b7280;
            font-weight: 500;
        }

        .cards-grid .progress-percentage {
            font-size: 15px;
            font-weight: 700;
            color: #020ee2;
        }

        .cards-grid .progress-bar-container {
            width: 100%;
            height: 8px;
            background: rgba(2, 14, 226, 0.08);
            border-radius: 4px;
            overflow: hidden;
            margin-bottom: 8px;
        }

        .cards-grid .progress-bar {
            height: 100%;
            background: linear-gradient(90deg, #020ee2, #5d66ff);
            border-radius: 4px;
            position: relative;
            transition: width 0.3s ease;
        }

        .cards-grid .progress-numbers {
            display: flex;
            justify-content: space-between;
            font-size: 13px;
            color: #9ca3af;
        }

        /* 포스팅 완료 상태 */
        .cards-grid .completed-section {
            background: linear-gradient(135deg, #f0f9ff, #e0f2fe);
            border: 2px solid #0ea5e9;
            border-radius: 12px;
            padding: 25px;
            text-align: center;
            margin-bottom: 20px;
            position: relative;
            overflow: hidden;
        }

        .cards-grid .completed-section::before {
            content: '';
            position: absolute;
            top: -2px;
            left: -2px;
            right: -2px;
            bottom: -2px;
            background: linear-gradient(45deg, #0ea5e9, #3b82f6, #6366f1, #8b5cf6);
            border-radius: 14px;
            z-index: -1;
        }

        .cards-grid .completed-icon {
            width: 60px;
            height: 60px;
            background: linear-gradient(135deg, #10b981, #059669);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 15px;
            font-size: 28px;
            color: white;
        }

        .cards-grid .completed-title {
            font-size: 18px;
            font-weight: 700;
            color: #0c4a6e;
            margin-bottom: 10px;
        }

        .cards-grid .completed-stats {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 15px;
            font-size: 14px;
            color: #0369a1;
        }

        .cards-grid .completed-target {
            font-weight: 600;
        }

        .cards-grid .completed-bonus {
            background: linear-gradient(135deg, #f59e0b, #d97706);
            color: white;
            padding: 4px 12px;
            border-radius: 20px;
            font-weight: 700;
            font-size: 12px;
            letter-spacing: 0.5px;
        }

        .cards-grid .deadline-section {
            display: flex;
            align-items: center;
            gap: 8px;
            color: #6b7280;
            font-size: 14px;
            background: #f9fafb;
            padding: 12px 16px;
            border-radius: 10px;
        }

        .cards-grid .deadline-icon {
            color: #f59e0b;
        }

        .cards-grid .card-quick-actions {
            position: absolute;
            top: 15px;
            right: 15px;
            display: flex;
            gap: 8px;
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s ease;
            z-index: 100;
        }

        .cards-grid .project-card:hover .card-quick-actions {
            opacity: 1;
            visibility: visible;
        }

        .cards-grid .card-quick-action-icon {
            width: 32px;
            height: 32px;
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            font-size: 14px;
            transition: all 0.25s ease;
        }

        .cards-grid .card-quick-action-icon:hover {
            transform: translateY(-2px);
        }

        .cards-grid .card-copy-icon {
            background: linear-gradient(135deg, #f97316, #ea580c);
            color: white;
        }

        .cards-grid .card-delete-icon {
            background: linear-gradient(135deg, #ef4444, #dc2626);
            color: white;
        }

        .cards-grid .card-actions {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.85);
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            gap: 15px;
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s ease;
            border-radius: 15px;
            padding: 20px;
        }

        .cards-grid .project-card:hover .card-actions {
            opacity: 1;
            visibility: visible;
        }

        .cards-grid .card-action-button {
            width: 100%;
            padding: 12px 20px;
            border: none;
            border-radius: 30px;
            font-weight: 600;
            font-size: 14px;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
            text-decoration: none;
        }

        .cards-grid .card-action-button:hover {
            transform: translateY(-2px);
        }

        .cards-grid .card-settings-button {
            background: linear-gradient(135deg, #3b82f6, #2563eb);
            color: white;
        }

        .cards-grid .card-settings-button:hover {
            box-shadow: 0 4px 15px rgba(59, 130, 246, 0.4);
        }

        .cards-grid .card-report-button {
            background: linear-gradient(135deg, #10b981, #059669);
            color: white;
        }

        .cards-grid .card-report-button:hover {
            box-shadow: 0 4px 15px rgba(16, 185, 129, 0.4);
        }

        /* 빈 상태 */
        .empty-state {
            text-align: center;
            padding: 60px 20px;
            background: white;
            border-radius: 15px;
            box-shadow: 0 3px 10px rgba(0, 0, 0, 0.05);
            margin-bottom: 30px;
            display: none;
        }

        .empty-state.show {
            display: block;
        }

        .empty-state .empty-icon {
            font-size: 48px;
            color: #9ca3af;
            margin-bottom: 20px;
        }

        .empty-state .empty-title {
            font-size: 18px;
            font-weight: 700;
            color: #1f2937;
            margin-bottom: 10px;
        }

        .empty-state .empty-message {
            color: #6b7280;
            font-size: 14px;
            line-height: 1.6;
        }

        /* 페이지네이션 */
        .pagination-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            margin-top: 30px;
        }

        .pagination-container .page-info {
            font-size: 14px;
            color: #6b7280;
            margin-bottom: 15px;
        }

        .pagination-container .page-info strong {
            color: #020ee2;
            font-weight: 600;
        }

        .pagination-container .page-buttons {
            display: flex;
            gap: 10px;
            align-items: center;
        }

        .pagination-container .page-button {
            background: white;
            border: 1px solid #e2e8f0;
            border-radius: 8px;
            padding: 8px 12px;
            color: #374151;
            font-weight: 600;
            font-size: 14px;
            cursor: pointer;
            transition: all 0.3s ease;
            min-width: 36px;
            text-align: center;
        }

        .pagination-container .page-button:hover {
            background: #f8faff;
            border-color: #020ee2;
            color: #020ee2;
        }

        .pagination-container .page-button.active {
            background: #020ee2;
            border-color: #020ee2;
            color: white;
        }

        .pagination-container .page-button:disabled {
            background: #f9fafb;
            border-color: #e2e8f0;
            color: #9ca3af;
            cursor: not-allowed;
        }

        .pagination-container .page-button:disabled:hover {
            background: #f9fafb;
            border-color: #e2e8f0;
            color: #9ca3af;
        }

        /* 모달 공통 스타일 */
        .modal-overlay {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.5);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 1100;
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s ease;
        }

        .modal-overlay.show {
            opacity: 1;
            visibility: visible;
        }

        .modal-overlay .modal {
            background: white;
            border-radius: 16px;
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.15);
            transform: translateY(-20px);
            transition: all 0.3s ease;
            max-height: 90vh;
            overflow-y: auto;
            width: 90%;
            max-width: 650px;
        }

        .modal-overlay.show .modal {
            transform: translateY(0);
        }

        .modal-overlay .modal-header {
            padding: 25px 30px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-bottom: 1px solid #f1f5f9;
        }

        .modal-overlay .modal-title {
            font-size: 20px;
            font-weight: 700;
            color: #1f2937;
            margin: 0;
        }

        .modal-overlay .modal-close {
            background: transparent;
            border: none;
            font-size: 24px;
            color: #9ca3af;
            cursor: pointer;
            padding: 0;
            line-height: 1;
            width: 32px;
            height: 32px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 6px;
            transition: all 0.2s ease;
        }

        .modal-overlay .modal-close:hover {
            background: #f3f4f6;
            color: #374151;
        }

        .modal-overlay .modal-content {
            padding: 30px;
        }

        .modal-overlay .modal-footer {
            padding: 25px 30px;
            display: flex;
            justify-content: center;
            gap: 15px;
            border-top: 1px solid #f1f5f9;
        }

        /* 복제 옵션 카드 */
        .copy-options-card {
            background: linear-gradient(135deg, #f8faff, #eef6ff);
            border: 1px solid #d1e5ff;
            border-radius: 12px;
            padding: 20px;
            margin-bottom: 25px;
        }

        .copy-options-card .copy-title {
            font-size: 16px;
            font-weight: 700;
            color: #1f2937;
            margin-bottom: 10px;
        }

        .copy-options-card .copy-description {
            color: #6b7280;
            font-size: 14px;
            line-height: 1.6;
            margin-bottom: 20px;
        }

        .copy-options-card .copy-options {
            display: flex;
            gap: 20px;
            flex-wrap: wrap;
        }

        .copy-options-card .copy-option {
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .copy-options-card .copy-switch {
            position: relative;
            width: 44px;
            height: 24px;
            background: #e2e8f0;
            border-radius: 12px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .copy-options-card .copy-switch.active {
            background: #020ee2;
        }

        .copy-options-card .copy-switch::after {
            content: '';
            position: absolute;
            top: 2px;
            left: 2px;
            width: 20px;
            height: 20px;
            background: white;
            border-radius: 50%;
            transition: all 0.3s ease;
        }

        .copy-options-card .copy-switch.active::after {
            left: 22px;
        }

        .copy-options-card .copy-option-label {
            font-size: 14px;
            color: #374151;
            font-weight: 500;
        }

        /* 필수 필드 표시 */
        .form-label .required {
            color: #ef4444;
        }

        .add-project-modal .form-group {
            margin-bottom: 25px;
        }

        .add-project-modal .form-group-row {
            display: flex;
            gap: 20px;
            margin-bottom: 25px;
        }

        .add-project-modal .form-group-col {
            flex: 1;
        }

        .add-project-modal .form-label {
            display: block;
            font-size: 15px;
            font-weight: 600;
            color: #374151;
            margin-bottom: 8px;
        }

        .add-project-modal .form-input {
            width: 100%;
            padding: 12px 15px;
            border: 1px solid #e2e8f0;
            border-radius: 8px;
            font-size: 14px;
            color: #374151;
            transition: all 0.25s ease;
            background: white;
            position: relative;
        }

        .add-project-modal .form-input:focus {
            outline: none;
            border-color: #020ee2;
            box-shadow: 0 0 0 3px rgba(2, 14, 226, 0.1);
        }

        .add-project-modal .form-input::placeholder {
            color: #9ca3af;
        }

        .add-project-modal .form-input.error {
            border-color: #ef4444;
            box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1);
        }

        .add-project-modal .form-input:disabled {
            background-color: #f9fafb;
            color: #9ca3af;
            cursor: not-allowed;
        }

        .add-project-modal .error-message {
            color: #ef4444;
            font-size: 13px;
            margin-top: 5px;
            display: none;
        }

        .add-project-modal .error-message.show {
            display: block;
        }

        .add-project-modal .custom-dropdown {
            position: relative;
            width: 100%;
            user-select: none;
        }

        .add-project-modal .dropdown-toggle {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 12px 15px;
            background: white;
            border: 1px solid #e2e8f0;
            border-radius: 8px;
            cursor: pointer;
            font-size: 14px;
            color: #374151;
            transition: all 0.25s ease;
            min-height: 42px;
        }

        .add-project-modal .dropdown-toggle:hover {
            border-color: #020ee2;
            background-color: #f8faff;
        }

        .add-project-modal .dropdown-toggle i {
            transition: transform 0.3s ease;
            color: #9ca3af;
        }

        .add-project-modal .dropdown-toggle.active i {
            transform: rotate(180deg);
        }

        .add-project-modal .dropdown-toggle.error {
            border-color: #ef4444;
            box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1);
        }

        .add-project-modal .dropdown-menu {
            position: absolute;
            top: calc(100% + 5px);
            left: 0;
            width: 100%;
            background: white;
            border: 1px solid #e2e8f0;
            border-radius: 8px;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
            z-index: 100;
            max-height: 0;
            overflow: hidden auto;
            opacity: 0;
            transition: all 0.3s ease;
        }

        .add-project-modal .dropdown-menu.show {
            max-height: 200px;
            opacity: 1;
            padding: 8px 0;
        }

        .add-project-modal .dropdown-item {
            padding: 10px 15px;
            cursor: pointer;
            font-size: 14px;
            transition: all 0.2s ease;
            color: #374151;
        }

        .add-project-modal .dropdown-item:hover {
            background: #f8faff;
            color: #020ee2;
        }

        .add-project-modal .dropdown-item.selected {
            background: rgba(2, 14, 226, 0.1);
            color: #020ee2;
            font-weight: 600;
        }

        .add-project-modal .date-selector {
            display: flex;
            gap: 10px;
        }

        .add-project-modal .date-dropdown {
            flex: 1;
            position: relative;
        }

        .add-project-modal .add-project-cancel-button {
            background: #f3f4f6;
            color: #4b5563;
            border: none;
            padding: 12px 24px;
            border-radius: 12px;
            font-weight: 600;
            font-size: 14px;
            cursor: pointer;
            transition: all 0.25s ease;
        }

        .add-project-modal .add-project-cancel-button:hover {
            background: #e5e7eb;
        }

        .add-project-modal .add-project-submit-button {
            background: #020ee2;
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 12px;
            font-weight: 600;
            font-size: 14px;
            cursor: pointer;
            transition: all 0.25s ease;
        }

        .add-project-modal .add-project-submit-button:hover {
            background: #010cc0;
        }

        .add-project-modal .add-project-submit-button:disabled {
            background: #9ca3af;
            cursor: not-allowed;
        }

        /* 복제 모달 전용 */
        .copy-project-modal .copy-modal-header {
            background: linear-gradient(135deg, #f97316, #ea580c);
            color: white;
        }

        .copy-project-modal .copy-modal-header .modal-title {
            color: white;
        }

        .copy-project-modal .copy-modal-header .modal-close {
            color: white;
        }

        /* 복제 모달 스타일 - 프로젝트 추가 모달과 동일 */
        .copy-project-modal .form-group {
            margin-bottom: 25px;
        }

        .copy-project-modal .form-group-row {
            display: flex;
            gap: 20px;
            margin-bottom: 25px;
        }

        .copy-project-modal .form-group-col {
            flex: 1;
        }

        .copy-project-modal .form-label {
            display: block;
            font-size: 15px;
            font-weight: 600;
            color: #374151;
            margin-bottom: 8px;
        }

        .copy-project-modal .form-input {
            width: 100%;
            padding: 12px 15px;
            border: 1px solid #e2e8f0;
            border-radius: 8px;
            font-size: 14px;
            color: #374151;
            transition: all 0.25s ease;
            background: white;
            position: relative;
        }

        .copy-project-modal .form-input:focus {
            outline: none;
            border-color: #020ee2;
            box-shadow: 0 0 0 3px rgba(2, 14, 226, 0.1);
        }

        .copy-project-modal .form-input::placeholder {
            color: #9ca3af;
        }

        .copy-project-modal .form-input.error {
            border-color: #ef4444;
            box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1);
        }

        .copy-project-modal .form-input:disabled {
            background-color: #f9fafb;
            color: #9ca3af;
            cursor: not-allowed;
        }

        .copy-project-modal .error-message {
            color: #ef4444;
            font-size: 13px;
            margin-top: 5px;
            display: none;
        }

        .copy-project-modal .error-message.show {
            display: block;
        }

        .copy-project-modal .custom-dropdown {
            position: relative;
            width: 100%;
            user-select: none;
        }

        .copy-project-modal .dropdown-toggle {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 12px 15px;
            background: white;
            border: 1px solid #e2e8f0;
            border-radius: 8px;
            cursor: pointer;
            font-size: 14px;
            color: #374151;
            transition: all 0.25s ease;
            min-height: 42px;
        }

        .copy-project-modal .dropdown-toggle:hover {
            border-color: #020ee2;
            background-color: #f8faff;
        }

        .copy-project-modal .dropdown-toggle i {
            transition: transform 0.3s ease;
            color: #9ca3af;
        }

        .copy-project-modal .dropdown-toggle.active i {
            transform: rotate(180deg);
        }

        .copy-project-modal .dropdown-toggle.error {
            border-color: #ef4444;
            box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1);
        }

        .copy-project-modal .dropdown-menu {
            position: absolute;
            top: calc(100% + 5px);
            left: 0;
            width: 100%;
            background: white;
            border: 1px solid #e2e8f0;
            border-radius: 8px;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
            z-index: 100;
            max-height: 0;
            overflow: hidden auto;
            opacity: 0;
            transition: all 0.3s ease;
        }

        .copy-project-modal .dropdown-menu.show {
            max-height: 200px;
            opacity: 1;
            padding: 8px 0;
        }

        .copy-project-modal .dropdown-item {
            padding: 10px 15px;
            cursor: pointer;
            font-size: 14px;
            transition: all 0.2s ease;
            color: #374151;
        }

        .copy-project-modal .dropdown-item:hover {
            background: #f8faff;
            color: #020ee2;
        }

        .copy-project-modal .dropdown-item.selected {
            background: rgba(2, 14, 226, 0.1);
            color: #020ee2;
            font-weight: 600;
        }

        .copy-project-modal .date-selector {
            display: flex;
            gap: 10px;
        }

        .copy-project-modal .date-dropdown {
            flex: 1;
            position: relative;
        }

        .copy-project-modal .add-project-cancel-button {
            background: #f3f4f6;
            color: #4b5563;
            border: none;
            padding: 12px 24px;
            border-radius: 12px;
            font-weight: 600;
            font-size: 14px;
            cursor: pointer;
            transition: all 0.25s ease;
        }

        .copy-project-modal .add-project-cancel-button:hover {
            background: #e5e7eb;
        }

        .copy-project-modal .add-project-submit-button {
            background: #020ee2;
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 12px;
            font-weight: 600;
            font-size: 14px;
            cursor: pointer;
            transition: all 0.25s ease;
        }

        .copy-project-modal .add-project-submit-button:hover {
            background: #010cc0;
        }

        .copy-project-modal .add-project-submit-button:disabled {
            background: #9ca3af;
            cursor: not-allowed;
        }

        /* 반응형 */
        @media (max-width: 768px) {
            body {
                padding: 15px;
            }

            .stats-container {
                grid-template-columns: 1fr;
            }

            .filter-search-container .filter-container {
                grid-template-columns: 1fr;
                gap: 15px;
            }

            .section-header-group {
                flex-direction: column;
                align-items: flex-start;
                gap: 15px;
            }

            .section-header-group .section-controls {
                width: 100%;
                justify-content: space-between;
            }

            .add-project-modal .form-group-row, .copy-project-modal .form-group-row {
                flex-direction: column;
                gap: 15px;
            }

            .add-project-modal .date-selector, .copy-project-modal .date-selector {
                flex-direction: column;
                gap: 15px;
            }

            .copy-options-card .copy-options {
                flex-direction: column;
                gap: 15px;
            }

            .pagination-container .page-buttons {
                flex-wrap: wrap;
            }
        }
    </style>
</head>
<body>

<div id="preloader" style="display: none;">
    <div class="loader">
        <svg class="circular" viewBox="25 25 50 50">
            <circle class="path" cx="50" cy="50" r="20" fill="none" stroke-width="3" stroke-miterlimit="10"></circle>
        </svg>
    </div>
</div>

<!-- 모바일 오버레이 -->
<div class="mobile-overlay"></div>

<!-- 사이드바 -->
<aside class="sidebar">
    <div class="sidebar-logo">
        <a href="/"><img src="https://selfposting.s3.ap-northeast-2.amazonaws.com/assets/brand/logo-text.png"
                         alt="셀프배포"></a>
    </div>

    <ul class="sidebar-menu">
        <li class="sidebar-menu-category">셀프배포 서비스</li>
        <li class="sidebar-menu-item">
            <a href="/dashboard" class="sidebar-menu-link active">
                <span class="sidebar-menu-icon"><i class="fas fa-home"></i></span>
                대시보드
            </a>
        </li>
    </ul>
    <ul class="sidebar-menu">
        <li class="sidebar-menu-category">상점</li>
        <li class="sidebar-menu-item">
            <a href="/store" class="sidebar-menu-link">
                <span class="sidebar-menu-icon"><i class="fa-solid fa-boxes-stacked"></i></span>
                상품 목록
            </a>
        </li>
    </ul>

    <ul class="sidebar-menu">
        <li class="sidebar-menu-category">Admin</li>
        <li class="sidebar-menu-item">
            <a href="/naver-account" class="sidebar-menu-link">
                <span class="sidebar-menu-icon"><i class="fas fa-user"></i></span>
                네이버 계정
            </a>
        </li>
        <li class="sidebar-menu-item">
            <a href="/post-list" class="sidebar-menu-link">
                <span class="sidebar-menu-icon"><i class="fas fa-list"></i></span>
                포스팅 목록
            </a>
        </li>
        <li class="sidebar-menu-item">
            <a href="/products" class="sidebar-menu-link">
                <span class="sidebar-menu-icon"><i class="fa-solid fa-boxes-stacked"></i></span>
                상품 관리
            </a>
        </li>
        <li class="sidebar-menu-item">
            <a href="/ad-banner" class="sidebar-menu-link">
                <span class="sidebar-menu-icon"><i class="fas fa-file-alt"></i></span>
                공정위 문구
            </a>
        </li>
        <li class="sidebar-menu-item">
            <a href="/dedicated-proxies" class="sidebar-menu-link">
                <span class="sidebar-menu-icon"><i class="fas fa-network-wired"></i></span>
                아이피 관리
            </a>
        </li>
    </ul>

    <!-- 사용자 정보 섹션 -->
    <div class="sidebar-user-section">
        <div class="sidebar-user-card">
            <div class="user-info">
                <div class="user-avatar">
                    <i class="fas fa-user"></i>
                </div>
                <div>
                    <div class="user-name">최창준</div>
                </div>
            </div>

            <div class="posting-stats">
                <div class="stats-title">
                    <i class="fas fa-chart-line"></i>
                    오늘 포스팅 현황
                </div>
                <div class="sidebar-progress-container">
                    <div class="sidebar-progress-bar" style="width: 65%;"></div>
                </div>
                <div class="progress-stats">
                    <div class="progress-current">65건 발행</div>
                    <div class="progress-total">/ 100건 목표</div>
                </div>
            </div>
        </div>
    </div>
</aside>

<!-- 헤더 -->
<header class="header">
    <div class="header-left">
        <button class="mobile-menu-toggle">
            <span></span>
            <span></span>
            <span></span>
        </button>
        <div class="header-title" id="headerTitle">대시보드</div>
    </div>
    <div class="header-right">
        <a class="kakao-chat-button" target="_blank" href="http://pf.kakao.com/_Yxkyvn/chat">
            <img src="/assets/image/icon/카톡상담.png">
        </a>
        <div class="profile-dropdown">
            <button class="profile-button">
                <i class="fas fa-user"></i>
            </button>
            <div class="profile-dropdown-menu">
                <a class="profile-dropdown-item" href="/account">
                    <i class="fas fa-user-cog"></i>
                    내정보
                </a>
                <div class="profile-dropdown-divider"></div>
                <a class="profile-dropdown-item" href="/member/logout">
                    <i class="fas fa-sign-out-alt"></i>
                    로그아웃
                </a>
            </div>
        </div>
    </div>
</header>

<div class="main-content">
    <!-- 통계 카드 -->
    <div class="stats-container">
        <div class="stat-card">
            <div class="stat-inner">
                <div class="text-group">
                    <p class="txt">등록된 프로젝트</p>
                    <h2 class="tit" id="totalProjectsCount">{{totalProjectCount}}</h2>
                </div>
                <div class="stat-icon green">
                    <i class="fas fa-folder"></i>
                </div>
            </div>
        </div>
        <div class="stat-card">
            <div class="stat-inner">
                <div class="text-group">
                    <p class="txt">진행중인 프로젝트</p>
                    <h2 class="tit" id="ongoingProjectsCount">{{ongoingProjectCount}}</h2>
                </div>
                <div class="stat-icon blue">
                    <i class="fas fa-spinner"></i>
                </div>
            </div>
        </div>
        <div class="stat-card">
            <div class="stat-inner">
                <div class="text-group">
                    <p class="txt">완료된 프로젝트</p>
                    <h2 class="tit" id="completedProjectsCount">{{completedProjectCount}}</h2>
                </div>
                <div class="stat-icon dark">
                    <i class="fas fa-check-circle"></i>
                </div>
            </div>
        </div>
    </div>

    <!-- 프로젝트 목록 섹션 -->
    <div class="section-header-group">
        <h2 class="tit">프로젝트 목록</h2>
        <div class="section-controls">
            <button id="addProjectBtn" class="project-add-button">
                <i class="fas fa-plus"></i>
                프로젝트 등록하기
            </button>
        </div>
    </div>

    <!-- 필터 및 검색 -->
    <div class="filter-search-container">
        <div class="filter-container">
            <div class="filter-item">
                <label>표시 개수</label>
                <div class="custom-dropdown" id="pageSizeFilter">
                    <div class="dropdown-toggle">
                        <span class="selected-option">12개</span>
                        <i class="fas fa-chevron-down"></i>
                    </div>
                    <div class="dropdown-menu">
                        <div class="dropdown-item selected" data-value="12">12개</div>
                        <div class="dropdown-item" data-value="24">24개</div>
                        <div class="dropdown-item" data-value="36">36개</div>
                    </div>
                </div>
            </div>
            <div class="filter-item">
                <label>프로젝트 상태</label>
                <div class="custom-dropdown" id="statusFilter">
                    <div class="dropdown-toggle">
                        <span class="selected-option">전체</span>
                        <i class="fas fa-chevron-down"></i>
                    </div>
                    <div class="dropdown-menu">
                        <div class="dropdown-item selected" data-value="">전체</div>
                        <div class="dropdown-item" data-value="ONGOING">진행중</div>
                        <div class="dropdown-item" data-value="COMPLETED">완료됨</div>
                        <div class="dropdown-item" data-value="CANCELED">취소됨</div>
                    </div>
                </div>
            </div>
            <div class="filter-item">
                <label>일일 유입 목표량</label>
                <div class="custom-dropdown" id="dailyPostFilter">
                    <div class="dropdown-toggle">
                        <span class="selected-option">선택</span>
                        <i class="fas fa-chevron-down"></i>
                    </div>
                    <div class="dropdown-menu">
                        <div class="dropdown-item selected" data-value="">선택</div>
                        <div class="dropdown-item" data-value="desc">많은순</div>
                        <div class="dropdown-item" data-value="asc">적은순</div>
                    </div>
                </div>
            </div>
            <div class="filter-item">
                <label>총 유입 목표량</label>
                <div class="custom-dropdown" id="totalPostFilter">
                    <div class="dropdown-toggle">
                        <span class="selected-option">선택</span>
                        <i class="fas fa-chevron-down"></i>
                    </div>
                    <div class="dropdown-menu">
                        <div class="dropdown-item selected" data-value="">선택</div>
                        <div class="dropdown-item" data-value="desc">많은순</div>
                        <div class="dropdown-item" data-value="asc">적은순</div>
                    </div>
                </div>
            </div>
        </div>
        <div class="search-container">
            <div class="search-input-wrapper">
                <i class="fas fa-search search-icon"></i>
                <input type="text" class="search-input" id="searchInput" placeholder="프로젝트 명을 입력하세요.">
            </div>
        </div>
    </div>

    <!-- 금일 완료된 프로젝트 제외 토글 -->
    <div class="exclude-completed-toggle show" id="excludeCompletedToggle">
        <div class="toggle-wrapper">
            <span class="toggle-label">금일 완료된 프로젝트 제외</span>
            <div class="toggle-switch" id="excludeCompletedSwitch">
                <input type="hidden" id="excludeCompleted" value="false">
            </div>
        </div>
    </div>

    <!-- 프로젝트 그룹 선택 모달 -->
    <div class="project-group-modal" id="projectGroupModal">
        <div class="project-group-modal-content">
            <div class="project-group-modal-header">
                <h3 class="project-group-modal-title">그룹 선택</h3>
                <div class="project-group-modal-search">
                    <div class="project-group-search-wrapper">
                        <input type="text" class="project-group-search-input" id="groupSearchInput"
                               placeholder="그룹 검색...">
                        <i class="fas fa-search project-group-search-icon"></i>
                    </div>
                    <button class="project-group-modal-close" id="projectGroupModalClose">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
            </div>

            <div class="project-group-modal-body">
                <div class="project-group-grid" id="projectGroupGrid">
                    <div class="project-group-card selected" data-group-id="">
                        <div class="project-group-name">전체 그룹</div>
                        <div class="project-group-count">모든 프로젝트</div>
                    </div>

                    <div class="project-group-card" data-group-id="1">
                        <div class="project-group-name">앤기브마케팅</div>
                        <div class="project-group-count">126개 프로젝트</div>
                    </div>

                    <div class="project-group-card" data-group-id="2">
                        <div class="project-group-name">웨이드소프트</div>
                        <div class="project-group-count">0개 프로젝트</div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- 스켈레톤 -->
    <div class="skeleton-container" id="skeletonContainer">
        <div class="skeleton-card">
            <div class="skeleton-line short"></div>
            <div class="skeleton-badge"></div>
            <div class="skeleton-line full"></div>
            <div class="skeleton-progress"></div>
            <div class="skeleton-line medium"></div>
            <div class="skeleton-progress"></div>
            <div class="skeleton-line medium"></div>
        </div>
        <div class="skeleton-card">
            <div class="skeleton-line short"></div>
            <div class="skeleton-badge"></div>
            <div class="skeleton-line full"></div>
            <div class="skeleton-progress"></div>
            <div class="skeleton-line medium"></div>
            <div class="skeleton-progress"></div>
            <div class="skeleton-line medium"></div>
        </div>
        <div class="skeleton-card">
            <div class="skeleton-line short"></div>
            <div class="skeleton-badge"></div>
            <div class="skeleton-line full"></div>
            <div class="skeleton-progress"></div>
            <div class="skeleton-line medium"></div>
            <div class="skeleton-progress"></div>
            <div class="skeleton-line medium"></div>
        </div>
        <div class="skeleton-card">
            <div class="skeleton-line short"></div>
            <div class="skeleton-badge"></div>
            <div class="skeleton-line full"></div>
            <div class="skeleton-progress"></div>
            <div class="skeleton-line medium"></div>
            <div class="skeleton-progress"></div>
            <div class="skeleton-line medium"></div>
        </div>
        <div class="skeleton-card">
            <div class="skeleton-line short"></div>
            <div class="skeleton-badge"></div>
            <div class="skeleton-line full"></div>
            <div class="skeleton-progress"></div>
            <div class="skeleton-line medium"></div>
            <div class="skeleton-progress"></div>
            <div class="skeleton-line medium"></div>
        </div>
        <div class="skeleton-card">
            <div class="skeleton-line short"></div>
            <div class="skeleton-badge"></div>
            <div class="skeleton-line full"></div>
            <div class="skeleton-progress"></div>
            <div class="skeleton-line medium"></div>
            <div class="skeleton-progress"></div>
            <div class="skeleton-line medium"></div>
        </div>
    </div>

    <!-- 빈 상태 -->
    <div class="empty-state" id="emptyState">
        <div class="empty-icon">
            <i class="fas fa-search"></i>
        </div>
        <h3 class="empty-title">일치하거나 등록된 프로젝트가 존재하지 않습니다.</h3>
        <p class="empty-message">다른 검색어를 시도하거나 새로운 프로젝트를 등록해보세요.</p>
    </div>

    <!-- 그리드 뷰 -->
    <div class="cards-grid" id="cardsGrid"></div>

    <!-- 페이지네이션 -->
    <div class="pagination-container" id="paginationContainer">
        <div class="page-info" id="pageInfo">
            <strong>126</strong>개 중 <strong>1-25</strong> 표시 (총 <strong>6</strong> 페이지)
        </div>
        <div class="page-buttons" id="pageButtons"></div>
    </div>
</div>

<!-- 프로젝트 추가 모달 -->
<div class="modal-overlay add-project-modal" id="addProjectModalOverlay">
    <div class="modal">
        <div class="modal-header">
            <h3 class="modal-title">프로젝트 등록하기</h3>
            <button class="modal-close" id="addProjectModalClose">×</button>
        </div>
        <div class="modal-content">
            <form id="projectForm">
                <!-- 프로젝트명 -->
                <div class="form-group">
                    <label class="form-label">프로젝트 명 <span class="required">*</span></label>
                    <input type="text" class="form-input" id="projectName" name="projectName"
                           placeholder="프로젝트 이름을 입력해주세요." required>
                    <div class="error-message">프로젝트 명을 입력해주세요.</div>
                </div>

                <!-- 대상 주소 -->
                <div class="form-group">
                    <label class="form-label">대상 주소 <span class="required">*</span></label>
                    <input type="text" class="form-input" id="targetAddress" name="targetAddress"
                           placeholder="https://example.com" required>
                    <div class="error-message">대상 주소를 입력해주세요.</div>
                </div>

                <!-- 프로젝트 시작일 -->
                <div class="form-group">
                    <label class="form-label">프로젝트 시작일 <span class="required">*</span></label>
                    <div class="date-selector">
                        <div class="date-dropdown">
                            <div class="custom-dropdown">
                                <div class="dropdown-toggle">
                                    <span class="selected-option" data-value="2025">2025년</span>
                                    <i class="fas fa-chevron-down"></i>
                                </div>
                                <div class="dropdown-menu" id="yearDropdownMenu"></div>
                            </div>
                            <input type="hidden" id="projectYear" name="projectYear" required value="2025">
                            <div class="error-message">연도를 선택해주세요.</div>
                        </div>
                        <div class="date-dropdown">
                            <div class="custom-dropdown">
                                <div class="dropdown-toggle">
                                    <span class="selected-option" data-value="10">10월</span>
                                    <i class="fas fa-chevron-down"></i>
                                </div>
                                <div class="dropdown-menu" id="monthDropdownMenu"></div>
                            </div>
                            <input type="hidden" id="projectMonth" name="projectMonth" required value="10">
                            <div class="error-message">월을 선택해주세요.</div>
                        </div>
                        <div class="date-dropdown">
                            <div class="custom-dropdown">
                                <div class="dropdown-toggle">
                                    <span class="selected-option" data-value="22">22일</span>
                                    <i class="fas fa-chevron-down"></i>
                                </div>
                                <div class="dropdown-menu" id="dayDropdownMenu"></div>
                            </div>
                            <input type="hidden" id="projectDay" name="projectDay" required value="22">
                            <div class="error-message">일을 선택해주세요.</div>
                        </div>
                    </div>
                </div>

                <!-- 유입량 -->
                <div class="form-group-row">
                    <div class="form-group-col">
                        <label class="form-label">일 유입량 <span class="required">*</span></label>
                        <input type="number" class="form-input" id="dailyAmount" name="dailyAmount"
                               placeholder="숫자를 입력해주세요" min="1" required>
                        <div class="error-message">일 유입량을 입력해주세요.</div>
                    </div>
                    <div class="form-group-col">
                        <label class="form-label">총 유입량 <span class="required">*</span></label>
                        <input type="number" class="form-input" id="totalAmount" name="totalAmount"
                               placeholder="숫자를 입력해주세요" min="1" required>
                        <div class="error-message" id="totalAmountError">총 유입량을 입력해주세요.</div>
                    </div>
                </div>
            </form>
        </div>
        <div class="modal-footer">
            <button type="button" class="add-project-cancel-button" id="cancelProjectBtn">취소</button>
            <button type="button" class="add-project-submit-button" id="submitProjectBtn" disabled>등록하기</button>
        </div>
    </div>
</div>

<!-- 프로젝트 복제 모달 -->
<div class="modal-overlay copy-project-modal" id="copyProjectModalOverlay">
    <div class="modal">
        <div class="modal-header copy-modal-header">
            <h3 class="modal-title">프로젝트 복제하기</h3>
            <button class="modal-close" id="copyProjectModalClose">×</button>
        </div>
        <div class="modal-content">
            <!-- 복제 옵션 카드 -->
            <div class="copy-options-card">
                <div class="copy-title">복제 옵션 설정</div>
                <div class="copy-description">프로젝트 세부 설정을 모두 복사합니다. 복제 옵션을 선택해주세요.</div>
                <div class="copy-options">
                    <div class="copy-option">
                        <div class="copy-switch active" data-option="images">
                            <input type="hidden" id="copyImages" value="true">
                        </div>
                        <span class="copy-option-label">이미지 포함</span>
                    </div>
                    <div class="copy-option">
                        <div class="copy-switch active" data-option="prompts">
                            <input type="hidden" id="copyPrompts" value="true">
                        </div>
                        <span class="copy-option-label">프롬프트 포함</span>
                    </div>
                </div>
            </div>

            <form id="copyProjectForm">
                <!-- 프로젝트명 -->
                <div class="form-group">
                    <label class="form-label">프로젝트 명 <span class="required">*</span></label>
                    <input type="text" class="form-input" id="copyProjectName" name="projectName"
                           placeholder="복제하실 프로젝트 이름을 입력해주세요." required>
                    <div class="error-message">복제할 프로젝트 명을 입력해주세요.</div>
                </div>

                <!-- 프로젝트 시작일 -->
                <div class="form-group">
                    <label class="form-label">프로젝트 시작일 <span class="required">*</span></label>
                    <div class="date-selector">
                        <div class="date-dropdown">
                            <div class="custom-dropdown">
                                <div class="dropdown-toggle">
                                    <span class="selected-option">연도 선택</span>
                                    <i class="fas fa-chevron-down"></i>
                                </div>
                                <div class="dropdown-menu" id="copyYearDropdownMenu"></div>
                            </div>
                            <input type="hidden" id="copyProjectYear" name="projectYear" required>
                            <div class="error-message">연도를 선택해주세요.</div>
                        </div>
                        <div class="date-dropdown">
                            <div class="custom-dropdown">
                                <div class="dropdown-toggle">
                                    <span class="selected-option">월 선택</span>
                                    <i class="fas fa-chevron-down"></i>
                                </div>
                                <div class="dropdown-menu" id="copyMonthDropdownMenu"></div>
                            </div>
                            <input type="hidden" id="copyProjectMonth" name="projectMonth" required>
                            <div class="error-message">월을 선택해주세요.</div>
                        </div>
                        <div class="date-dropdown">
                            <div class="custom-dropdown">
                                <div class="dropdown-toggle">
                                    <span class="selected-option">일 선택</span>
                                    <i class="fas fa-chevron-down"></i>
                                </div>
                                <div class="dropdown-menu" id="copyDayDropdownMenu"></div>
                            </div>
                            <input type="hidden" id="copyProjectDay" name="projectDay" required>
                            <div class="error-message">일을 선택해주세요.</div>
                        </div>
                    </div>
                </div>

                <!-- 유입량 -->
                <div class="form-group-row">
                    <div class="form-group-col">
                        <label class="form-label">일 유입량 <span class="required">*</span></label>
                        <input type="number" class="form-input" id="copyDailyAmount" name="dailyAmount"
                               placeholder="숫자를 입력해주세요" min="1" required>
                        <div class="error-message">일 유입량을 입력해주세요.</div>
                    </div>
                    <div class="form-group-col">
                        <label class="form-label">총 유입량 <span class="required">*</span></label>
                        <input type="number" class="form-input" id="copyTotalAmount" name="totalAmount"
                               placeholder="숫자를 입력해주세요" min="1" required>
                        <div class="error-message" id="copyTotalAmountError">총 유입량을 입력해주세요.</div>
                    </div>
                </div>
            </form>
        </div>
        <div class="modal-footer">
            <button type="button" class="add-project-cancel-button" id="copyCancelBtn">취소</button>
            <button type="button" class="add-project-submit-button" id="copySubmitBtn" disabled>복제하기</button>
        </div>
    </div>
</div>

{{>layouts/script}}
<script>
    // ============================================
    // 에러 파싱 유틸리티
    // ============================================
    const ErrorUtils = {
        /**
         * API 응답에서 에러 메시지 추출
         * @param {Response} response - fetch API response 객체
         * @returns {Promise<string>} 에러 메시지
         */
        parseError: async function(response) {
            try {
                const text = await response.text();
                const errorData = this.safeJsonParse(text);

                if (errorData && errorData.error && errorData.error.message) {
                    return errorData.error.message;
                }

                return '요청 처리 중 오류가 발생했습니다.';
            } catch (e) {
                return '요청 처리 중 오류가 발생했습니다.';
            }
        },

        /**
         * JSON 파싱 (이중 인코딩 처리)
         * @param {string} value - 파싱할 문자열
         * @returns {Object|null} 파싱된 객체 또는 null
         */
        safeJsonParse: function(value) {
            try {
                const first = (typeof value === 'string') ? JSON.parse(value) : value;
                if (typeof first === 'string') {
                    return JSON.parse(first);
                }
                return first;
            } catch (e) {
                return null;
            }
        },

        /**
         * 에러 메시지 Alert 표시
         * @param {string} message - 표시할 에러 메시지
         * @param {number} duration - 표시 시간 (ms)
         */
        showError: function(message, duration = 3000) {
            if (typeof showTypedToast === 'function') {
                showTypedToast(message, 'error', duration);
            } else {
                alert(message);
            }
        }
    };

    // 전역 변수
    let projectGroups = [];
    let currentData = {
        projects: [],
        totalCount: 0,
        currentPage: 1,
        pageSize: 25,
        filters: {
            pageSize: 25,
            projectStatus: '',
            orderByDailyPostCountDesc: null,
            orderByTotalPostCountDesc: null,
            searchInput: '',
            viewerGroupId: null,
            excludeCompleted: false
        }
    };
    let currentCopyProjectData = null;

    // 유틸 함수들
    function showInfoToast(message, duration = 2000) {
        if (typeof showTypedToast === 'function') {
            showTypedToast(message, 'info', duration);
        }
    }

    // 상태 매핑
    function getStatusInfo(status) {
        const statusMap = {
            'ONGOING': {text: '진행중', class: 'status-ongoing'},
            'PAUSED': {text: '대기중', class: 'status-paused'},
            'COMPLETED': {text: '완료됨', class: 'status-completed'},
            'CANCELED': {text: '취소됨', class: 'status-canceled'}
        };
        return statusMap[status] || {text: status, class: 'status-ongoing'};
    }

    // 진행률 계산
    function calculateProgress(uploaded, target) {
        if (!target || target === 0) return 0;
        return Math.min(100, Math.round((uploaded / target) * 100));
    }

    // 프로젝트 카드 생성
    function createProjectCard(project, index) {
        const statusInfo = getStatusInfo(project.projectStatus);
        const isCompleted = project.totalUploadedPostCount >= project.targetPostCount;

        let progressSection = '';

        if (isCompleted) {
            const bonus = project.totalUploadedPostCount - project.targetPostCount;
            progressSection = `
                <div class="completed-section">
                    <div class="completed-icon">
                        <i class="fas fa-check"></i>
                    </div>
                    <div class="completed-title">모든 포스팅 완료!</div>
                    <div class="completed-stats">
                        <span class="completed-target">목표: ${project.targetPostCount}회</span>
                        ${bonus > 0 ? `<span class="completed-bonus">BONUS ${bonus}회</span>` : ''}
                    </div>
                </div>
            `;
        } else {
            const dailyProgress = calculateProgress(project.dailyUploadedPostCount, project.dailyTargetPostCount);
            const totalProgress = calculateProgress(project.totalUploadedPostCount, project.targetPostCount);

            progressSection = `
                <div class="progress-section">
                    <div class="progress-info">
                        <span class="progress-text">일일 목표 달성률</span>
                        <span class="progress-percentage">${dailyProgress}%</span>
                    </div>
                    <div class="progress-bar-container">
                        <div class="progress-bar" style="width:${dailyProgress}%"></div>
                    </div>
                    <div class="progress-numbers">
                        <span>유입: ${project.dailyUploadedPostCount}회</span>
                        <span>목표: ${project.dailyTargetPostCount}회</span>
                    </div>
                </div>
                <div class="progress-section">
                    <div class="progress-info">
                        <span class="progress-text">전체 목표 달성률</span>
                        <span class="progress-percentage">${totalProgress}%</span>
                    </div>
                    <div class="progress-bar-container">
                        <div class="progress-bar" style="width:${totalProgress}%"></div>
                    </div>
                    <div class="progress-numbers">
                        <span>유입: ${project.totalUploadedPostCount}회</span>
                        <span>목표: ${project.targetPostCount}회</span>
                    </div>
                </div>
            `;
        }

        return `
            <div class="project-card" data-project-id="${project.projectId}">
                <div class="card-header">
                    <div class="card-number">${index + 1}</div>
                    <h3 class="project-name">${project.projectName}</h3>
                </div>
                <div class="card-quick-actions">
                    <div class="card-quick-action-icon card-copy-icon" onclick="openCopyModal('${project.projectId}')">
                        <i class="fas fa-copy"></i>
                    </div>
                    <div class="card-quick-action-icon card-delete-icon">
                        <i class="fas fa-trash-alt"></i>
                    </div>
                </div>
                <div class="status-badges">
                    <span class="status-badge ${statusInfo.class}">${statusInfo.text}</span>
                </div>
                ${progressSection}
                <div class="card-actions">
                    <a class="card-action-button card-settings-button">
                        <i class="fas fa-cog"></i>
                        <span>프로젝트 설정</span>
                    </a>
                    <a class="card-action-button card-report-button">
                        <i class="fas fa-cog"></i>
                        <span>프로젝트 리포트</span>
                    </a>
                </div>
            </div>
        `;
    }

    // 토글 상태 업데이트 함수
    function updateExcludeCompletedToggle() {
        const currentStatus = currentData.filters.projectStatus;
        const shouldShow = currentStatus === '' || currentStatus === 'ONGOING';

        if (shouldShow) {
            $('#excludeCompletedToggle').addClass('show');
        } else {
            $('#excludeCompletedToggle').removeClass('show');
            currentData.filters.excludeCompleted = false;
            $('#excludeCompleted').val('false');
            $('#excludeCompletedSwitch').removeClass('active');
        }
    }

    // 페이지네이션 생성
    function createPagination(currentPage, totalPages) {
        if (totalPages <= 1) return '';

        let buttons = [];

        buttons.push(`
            <button class="page-button" ${currentPage <= 1 ? 'disabled' : ''} data-page="${currentPage - 1}">
                <i class="fas fa-chevron-left"></i>
            </button>
        `);

        let startPage = Math.max(1, currentPage - 1);
        let endPage = Math.min(totalPages, startPage + 2);

        if (endPage - startPage < 2) {
            startPage = Math.max(1, endPage - 2);
        }

        for (let i = startPage; i <= endPage; i++) {
            buttons.push(`
                <button class="page-button ${i === currentPage ? 'active' : ''}" data-page="${i}">
                    ${i}
                </button>
            `);
        }

        buttons.push(`
            <button class="page-button" ${currentPage >= totalPages ? 'disabled' : ''} data-page="${currentPage + 1}">
                <i class="fas fa-chevron-right"></i>
            </button>
        `);

        return buttons.join('');
    }

    // 프로젝트 그룹 모달 열기
    function openProjectGroupModal() {
        $('#projectGroupModal').addClass('show');
        $('body').css('overflow', 'hidden');
    }

    // 프로젝트 그룹 모달 닫기
    function closeProjectGroupModal() {
        $('#projectGroupModal').removeClass('show');
        $('body').css('overflow', '');
    }

    // 프로젝트 그룹 검색 함수
    function searchProjectGroups() {
        const searchTerm = $('#groupSearchInput').val().toLowerCase().trim();
        const $cards = $('.project-group-card');

        $cards.each(function () {
            const groupName = $(this).find('.project-group-name').text().toLowerCase();
            const shouldShow = !searchTerm || groupName.includes(searchTerm);
            $(this).toggle(shouldShow);
        });
    }

    // 프로젝트 데이터 로드
    async function loadProjects(page = 1) {
        try {
            $('#skeletonContainer').addClass('show');
            $('#cardsGrid').addClass('hidden');
            $('#emptyState').removeClass('show');

            const requestData = {
                page: page,
                pageSize: currentData.filters.pageSize,
                projectStatus: currentData.filters.projectStatus || null,
                orderByDailyPostCountDesc: currentData.filters.orderByDailyPostCountDesc,
                orderByTotalPostCountDesc: currentData.filters.orderByTotalPostCountDesc,
                searchInput: currentData.filters.searchInput || null,
                viewerGroupId: currentData.filters.viewerGroupId || null,
                excludeCompleted: currentData.filters.excludeCompleted
            };

            const response = await fetch('/api/v1/projects/load', {
                method: 'POST',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify(requestData)
            });

            if (!response.ok) {
                const errorMessage = await ErrorUtils.parseError(response);
                throw new Error(errorMessage);
            }

            const data = await response.json();

            currentData.projects = data.results || [];
            currentData.totalCount = data.totalCount || 0;
            currentData.currentPage = page;

            updateProjectsDisplay();
            updateStatistics();
            updatePagination();

        } catch (error) {
            ErrorUtils.showError(error.message);
            $('#skeletonContainer').removeClass('show');
            $('#emptyState').addClass('show');
            $('#cardsGrid').addClass('hidden');
        } finally {
            setTimeout(() => {
                $('#skeletonContainer').removeClass('show');
            }, 300);
        }
    }

    // 프로젝트 그룹 로드
    async function loadProjectGroups() {
        try {
            projectGroups = JSON.parse(`[
                {
                    "groupId": 1,
                    "groupName": "앤기브마케팅",
                    "projectCount": 126
                },
                {
                    "groupId": 2,
                    "groupName": "웨이드소프트",
                    "projectCount": 0
                }
            ]`);

            const $groupGrid = $('#projectGroupGrid');
            $groupGrid.empty();
            $groupGrid.append(`
                <div class="project-group-card selected" data-group-id="">
                    <div class="project-group-name">전체 그룹</div>
                    <div class="project-group-count">모든 프로젝트</div>
                </div>
            `);

            projectGroups.forEach(group => {
                $groupGrid.append(`
                    <div class="project-group-card" data-group-id="${group.groupId}">
                        <div class="project-group-name">${group.groupName}</div>
                        <div class="project-group-count">${group.projectCount.toLocaleString()}개 프로젝트</div>
                    </div>
                `);
            });

        } catch (error) {
            console.error('프로젝트 그룹 로드 실패:', error);
        }
    }

    // 프로젝트 표시 업데이트
    function updateProjectsDisplay() {
        const $cardsGrid = $('#cardsGrid');

        if (currentData.projects.length === 0) {
            $cardsGrid.addClass('hidden');
            $('#emptyState').addClass('show');
            return;
        }

        $('#emptyState').removeClass('show');
        $cardsGrid.removeClass('hidden');

        const cardsHtml = currentData.projects.map((project, index) =>
                createProjectCard(project, (currentData.currentPage - 1) * currentData.filters.pageSize + index)
        ).join('');

        $cardsGrid.html(cardsHtml);
    }

    // 통계 업데이트
    function updateStatistics() {
        const total = currentData.totalCount;
        const ongoing = currentData.projects.filter(p => p.projectStatus === 'ONGOING').length;
        const completed = currentData.projects.filter(p => p.projectStatus === 'COMPLETED').length;

        $('#totalProjectsCount').text(total);
        $('#ongoingProjectsCount').text(ongoing);
        $('#completedProjectsCount').text(completed);
    }

    // 페이지네이션 업데이트
    function updatePagination() {
        const totalPages = Math.ceil(currentData.totalCount / currentData.filters.pageSize);
        const startIndex = (currentData.currentPage - 1) * currentData.filters.pageSize + 1;
        const endIndex = Math.min(currentData.currentPage * currentData.filters.pageSize, currentData.totalCount);

        $('#pageInfo').html(`
            <strong>${currentData.totalCount}</strong>개 중 <strong>${startIndex}-${endIndex}</strong> 표시 (총 <strong>${totalPages}</strong> 페이지)
        `);

        const paginationHtml = createPagination(currentData.currentPage, totalPages);
        $('#pageButtons').html(paginationHtml);

        if (totalPages <= 1) {
            $('#paginationContainer').hide();
        } else {
            $('#paginationContainer').show();
        }
    }

    // 필터 적용
    function applyFilters() {
        currentData.currentPage = 1;
        updateExcludeCompletedToggle();
        loadProjects(1);
    }

    // 상호 배타적 필터 처리
    function handleMutuallyExclusiveFilters(activeFilter, otherFilter) {
        if (activeFilter === 'daily') {
            $('#totalPostFilter .selected-option').text('선택');
            $('#totalPostFilter .dropdown-item').removeClass('selected');
            $('#totalPostFilter .dropdown-item[data-value=""]').addClass('selected');
            currentData.filters.orderByTotalPostCountDesc = null;
        } else if (activeFilter === 'total') {
            $('#dailyPostFilter .selected-option').text('선택');
            $('#dailyPostFilter .dropdown-item').removeClass('selected');
            $('#dailyPostFilter .dropdown-item[data-value=""]').addClass('selected');
            currentData.filters.orderByDailyPostCountDesc = null;
        }
    }

    // 복제 모달 열기
    async function openCopyModal(projectId) {
        try {
            const project = currentData.projects.find(p => p.projectId == projectId);
            if (!project) {
                ErrorUtils.showError('프로젝트 정보를 찾을 수 없습니다.');
                return;
            }

            currentCopyProjectData = project;

            $('#copyProjectModalOverlay').addClass('show');
            $('body').css('overflow', 'hidden');

            resetCopyForm();

            $('#copyProjectName').val(project.projectName + ' (복사본)');
            $('#copyDailyAmount').val(project.dailyTargetPostCount);
            $('#copyTotalAmount').val(project.targetPostCount);

            initCopyDateSelectors();
            validateAllCopyFields();

        } catch (error) {
            ErrorUtils.showError('복제 모달을 여는 중 오류가 발생했습니다.');
        }
    }

    // 복제 모달 폼 초기화
    function resetCopyForm() {
        $('#copyProjectForm')[0].reset();
        $('.copy-project-modal .form-input, .copy-project-modal .dropdown-toggle').removeClass('error');
        $('.copy-project-modal .error-message').removeClass('show');
        $('#copyDailyAmount, #copyTotalAmount').val('');

        setCopySubmitEnabled(false);
    }

    // 복제용 날짜 선택기 초기화
    function initCopyDateSelectors() {
        const now = new Date();
        const y = now.getFullYear();
        const m = now.getMonth() + 1;
        const d = now.getDate();

        const $yearMenu = $('#copyYearDropdownMenu').empty();
        for (let year = y; year <= y + 5; year++) {
            const sel = (year === y) ? ' selected' : '';
            $yearMenu.append(`<div class="dropdown-item${sel}" data-value="${year}">${year}년</div>`);
        }

        const $monthMenu = $('#copyMonthDropdownMenu').empty();
        for (let month = 1; month <= 12; month++) {
            const sel = (month === m) ? ' selected' : '';
            $monthMenu.append(`<div class="dropdown-item${sel}" data-value="${month}">${month}월</div>`);
        }

        updateCopyDayOptions(y, m, d);

        $('#copyProjectYear').val(y);
        $('#copyProjectMonth').val(m);
        $('#copyProjectDay').val(d);

        $('#copyYearDropdownMenu').closest('.custom-dropdown').find('.selected-option').text(`${y}년`).attr('data-value', y);
        $('#copyMonthDropdownMenu').closest('.custom-dropdown').find('.selected-option').text(`${m}월`).attr('data-value', m);
        $('#copyDayDropdownMenu').closest('.custom-dropdown').find('.selected-option').text(`${d}일`).attr('data-value', d);
    }

    // 복제용 일 옵션 업데이트
    function updateCopyDayOptions(year, month, selectedDay = null) {
        const $dayMenu = $('#copyDayDropdownMenu').empty();
        if (!year || !month) return;
        const daysInMonth = new Date(year, month, 0).getDate();
        for (let day = 1; day <= daysInMonth; day++) {
            const sel = (day === selectedDay) ? ' selected' : '';
            $dayMenu.append(`<div class="dropdown-item${sel}" data-value="${day}">${day}일</div>`);
        }
    }

    // 복제용 전체 필드 검증
    function validateAllCopyFields() {
        const projectName = $('#copyProjectName').val() && $('#copyProjectName').val().trim();
        const year = $('#copyProjectYear').val();
        const month = $('#copyProjectMonth').val();
        const day = $('#copyProjectDay').val();
        const daily = parseInt($('#copyDailyAmount').val(), 10) || 0;
        const total = parseInt($('#copyTotalAmount').val(), 10) || 0;
        const dailyTotalValid = daily > 0 && total > 0 && daily <= total;

        const allValid = projectName && year && month && day && dailyTotalValid;
        setCopySubmitEnabled(allValid);
    }

    // 복제용 제출 버튼 활성화/비활성화
    function setCopySubmitEnabled(enabled) {
        $('#copySubmitBtn').prop('disabled', !enabled);
    }

    // 드롭다운 초기화
    function initDropdowns() {
        $('.filter-search-container .custom-dropdown').each(function () {
            const $dropdown = $(this);
            const $toggle = $dropdown.find('.dropdown-toggle');
            const $menu = $dropdown.find('.dropdown-menu');
            const $selected = $toggle.find('.selected-option');

            $toggle.on('click', function (e) {
                e.stopPropagation();

                $('.filter-search-container .custom-dropdown').not($dropdown).find('.dropdown-toggle').removeClass('active');
                $('.filter-search-container .custom-dropdown').not($dropdown).find('.dropdown-menu').removeClass('show');
                $toggle.toggleClass('active');
                $menu.toggleClass('show');
            });

            $menu.on('click', '.dropdown-item', function () {
                const text = $(this).text();
                const value = $(this).data('value') ?? '';

                $menu.find('.dropdown-item').removeClass('selected');
                $(this).addClass('selected');
                $selected.text(text);
                $toggle.removeClass('active');
                $menu.removeClass('show');

                const dropdownId = $dropdown.attr('id');

                if (dropdownId === 'pageSizeFilter') {
                    currentData.filters.pageSize = parseInt(value) || 25;
                } else if (dropdownId === 'statusFilter') {
                    currentData.filters.projectStatus = value;
                } else if (dropdownId === 'dailyPostFilter') {
                    if (value === 'desc') {
                        currentData.filters.orderByDailyPostCountDesc = true;
                        handleMutuallyExclusiveFilters('daily');
                    } else if (value === 'asc') {
                        currentData.filters.orderByDailyPostCountDesc = false;
                        handleMutuallyExclusiveFilters('daily');
                    } else {
                        currentData.filters.orderByDailyPostCountDesc = null;
                    }
                } else if (dropdownId === 'totalPostFilter') {
                    if (value === 'desc') {
                        currentData.filters.orderByTotalPostCountDesc = true;
                        handleMutuallyExclusiveFilters('total');
                    } else if (value === 'asc') {
                        currentData.filters.orderByTotalPostCountDesc = false;
                        handleMutuallyExclusiveFilters('total');
                    } else {
                        currentData.filters.orderByTotalPostCountDesc = null;
                    }
                }

                applyFilters();
            });
        });

        $('.add-project-modal .custom-dropdown, .copy-project-modal .custom-dropdown').each(function () {
            const $dropdown = $(this);
            const $toggle = $dropdown.find('.dropdown-toggle');
            const $menu = $dropdown.find('.dropdown-menu');
            const $selected = $toggle.find('.selected-option');

            $toggle.on('click', function (e) {
                e.stopPropagation();
                $('.add-project-modal .custom-dropdown, .copy-project-modal .custom-dropdown').not($dropdown).find('.dropdown-toggle').removeClass('active');
                $('.add-project-modal .custom-dropdown, .copy-project-modal .custom-dropdown').not($dropdown).find('.dropdown-menu').removeClass('show');
                $toggle.toggleClass('active');
                $menu.toggleClass('show');
            });

            $menu.on('click', '.dropdown-item', function () {
                const text = $(this).text();
                const value = $(this).data('value') ?? text;
                $menu.find('.dropdown-item').removeClass('selected');
                $(this).addClass('selected');
                $selected.text(text).attr('data-value', value);
                $toggle.removeClass('active');
                $menu.removeClass('show');

                const hiddenInput = $dropdown.siblings('input[type="hidden"]');
                if (hiddenInput.length) hiddenInput.val(value);

                const isCopyModal = $dropdown.closest('.copy-project-modal').length > 0;
                if ($menu.attr('id') === 'monthDropdownMenu' || $menu.attr('id') === 'yearDropdownMenu' ||
                        $menu.attr('id') === 'copyMonthDropdownMenu' || $menu.attr('id') === 'copyYearDropdownMenu') {
                    const yearVal = isCopyModal ? $('#copyProjectYear').val() : $('#projectYear').val();
                    const monthVal = isCopyModal ? $('#copyProjectMonth').val() : $('#projectMonth').val();
                    const y = parseInt(yearVal, 10);
                    const m = parseInt(monthVal, 10);
                    if (y && m) {
                        if (isCopyModal) {
                            updateCopyDayOptions(y, m);
                        } else {
                            updateDayOptions(y, m);
                        }
                    }
                }

                if (isCopyModal) {
                    validateAllCopyFields();
                } else {
                    validateAllFields();
                }
            });
        });

        $(document).on('click', function () {
            $('.dropdown-toggle').removeClass('active');
            $('.dropdown-menu').removeClass('show');
        });
    }

    // 페이지네이션 이벤트
    function initPagination() {
        $(document).on('click', '.page-button:not(:disabled)', function () {
            const page = parseInt($(this).data('page'));
            if (page && page !== currentData.currentPage) {
                currentData.currentPage = page;
                loadProjects(page);
            }
        });
    }

    // 검색 기능
    function initSearch() {
        let searchTimeout;

        $('#searchInput').on('input', function () {
            clearTimeout(searchTimeout);
            const searchTerm = $(this).val().trim();

            searchTimeout = setTimeout(() => {
                currentData.filters.searchInput = searchTerm;
                applyFilters();
            }, 500);
        });

        $('#searchInput').on('keypress', function (e) {
            if (e.which === 13) {
                e.preventDefault();
                clearTimeout(searchTimeout);
                currentData.filters.searchInput = $(this).val().trim();
                applyFilters();
            }
        });

        $('.search-icon').on('click', function () {
            currentData.filters.searchInput = $('#searchInput').val().trim();
            applyFilters();
        });
    }

    // 프로젝트 추가 모달 관련 함수들
    function setSubmitEnabled(enabled) {
        $('#submitProjectBtn').prop('disabled', !enabled);
    }

    function validateAllFields() {
        const projectName = $('#projectName').val() && $('#projectName').val().trim();
        const targetAddress = $('#targetAddress').val() && $('#targetAddress').val().trim();
        const year = $('#projectYear').val();
        const month = $('#projectMonth').val();
        const day = $('#projectDay').val();
        const daily = parseInt($('#dailyAmount').val(), 10) || 0;
        const total = parseInt($('#totalAmount').val(), 10) || 0;
        const dailyTotalValid = daily > 0 && total > 0 && daily <= total;

        const allValid = projectName && targetAddress && year && month && day && dailyTotalValid;
        setSubmitEnabled(allValid);
    }

    function initDateSelectors() {
        const now = new Date();
        const y = now.getFullYear();
        const m = now.getMonth() + 1;
        const d = now.getDate();

        const $yearMenu = $('#yearDropdownMenu').empty();
        for (let year = y; year <= y + 5; year++) {
            const sel = (year === y) ? ' selected' : '';
            $yearMenu.append(`<div class="dropdown-item${sel}" data-value="${year}">${year}년</div>`);
        }

        const $monthMenu = $('#monthDropdownMenu').empty();
        for (let month = 1; month <= 12; month++) {
            const sel = (month === m) ? ' selected' : '';
            $monthMenu.append(`<div class="dropdown-item${sel}" data-value="${month}">${month}월</div>`);
        }

        updateDayOptions(y, m, d);

        $('#projectYear').val(y);
        $('#projectMonth').val(m);
        $('#projectDay').val(d);

        $('#yearDropdownMenu').closest('.custom-dropdown').find('.selected-option').text(`${y}년`).attr('data-value', y);
        $('#monthDropdownMenu').closest('.custom-dropdown').find('.selected-option').text(`${m}월`).attr('data-value', m);
        $('#dayDropdownMenu').closest('.custom-dropdown').find('.selected-option').text(`${d}일`).attr('data-value', d);
    }

    function updateDayOptions(year, month, selectedDay = null) {
        const $dayMenu = $('#dayDropdownMenu').empty();
        if (!year || !month) return;
        const daysInMonth = new Date(year, month, 0).getDate();
        for (let day = 1; day <= daysInMonth; day++) {
            const sel = (day === selectedDay) ? ' selected' : '';
            $dayMenu.append(`<div class="dropdown-item${sel}" data-value="${day}">${day}일</div>`);
        }
    }

    function gatherProjectDTO() {
        const projectName = ($('#projectName').val() || '').trim();
        const targetAddress = ($('#targetAddress').val() || '').trim();
        const daily = parseInt($('#dailyAmount').val(), 10) || 0;
        const total = parseInt($('#totalAmount').val(), 10) || 0;

        const y = parseInt($('#projectYear').val(), 10);
        const m = parseInt($('#projectMonth').val(), 10);
        const d = parseInt($('#projectDay').val(), 10);
        const startedAt = (y && m && d) ? `${y}-${String(m).padStart(2, '0')}-${String(d).padStart(2, '0')}T00:00:00` : null;

        return {
            name: projectName,
            targetAddress: targetAddress,
            startedAt: startedAt,
            dailyTargetTrafficCount: daily,
            totalTargetTrafficCount: total
        };
    }

    function gatherCopyProjectDTO() {
        const daily = parseInt($('#copyDailyAmount').val(), 10) || 0;
        const total = parseInt($('#copyTotalAmount').val(), 10) || 0;

        const y = parseInt($('#copyProjectYear').val(), 10);
        const m = parseInt($('#copyProjectMonth').val(), 10);
        const d = parseInt($('#copyProjectDay').val(), 10);
        const startDate = (y && m && d) ? `${y}-${String(m).padStart(2, '0')}-${String(d).padStart(2, '0')}` : null;

        const projectName = ($('#copyProjectName').val() || '').trim();

        return {
            originalProjectId: currentCopyProjectData.projectId,
            projectName,
            targetPostCount: total,
            dailyTargetPostCount: daily,
            startDate,
            copyImages: $('#copyImages').val() === 'true',
            copyPrompts: $('#copyPrompts').val() === 'true'
        };
    }

    function resetForm() {
        $('#projectForm')[0].reset();
        $('.add-project-modal .form-input, .add-project-modal .dropdown-toggle').removeClass('error');
        $('.add-project-modal .error-message').removeClass('show');
        $('#dailyAmount, #totalAmount, #targetAddress').val('');

        setSubmitEnabled(false);
    }

    // 초기화
    $(document).ready(function () {
        initDropdowns();
        initPagination();
        initSearch();
        initDateSelectors();

        unLoadPreloader(1000);

        loadProjects(1);
        loadProjectGroups();

        // 완료된 프로젝트 제외 토글 이벤트
        $('#excludeCompletedSwitch').on('click', function () {
            $(this).toggleClass('active');
            const isActive = $(this).hasClass('active');
            $('#excludeCompleted').val(isActive ? 'true' : 'false');
            currentData.filters.excludeCompleted = isActive;
            applyFilters();
        });

        // 프로젝트 그룹 모달 이벤트
        $('#projectGroupModalClose').on('click', closeProjectGroupModal);

        $('#projectGroupModal').on('click', function (e) {
            if (e.target === this) {
                closeProjectGroupModal();
            }
        });

        $(document).on('click', '.project-group-card', function () {
            const groupId = $(this).data('group-id') || '';
            const groupName = $(this).find('.project-group-name').text();

            $('.project-group-card').removeClass('selected');
            $(this).addClass('selected');

            $('#projectGroupFilter .selected-option').text(groupName);
            currentData.filters.viewerGroupId = groupId || null;

            closeProjectGroupModal();
            applyFilters();
        });

        $('#groupSearchInput').on('keypress', function (e) {
            if (e.which === 13) {
                e.preventDefault();
                searchProjectGroups();
            }
        });

        $('.project-group-search-icon').on('click', function () {
            searchProjectGroups();
        });

        $('#groupSearchInput').on('input', function () {
            if ($(this).val().trim() === '') {
                $('.project-group-card').show();
            }
        });

        // 복제 옵션 스위치 이벤트
        $('.copy-switch').on('click', function () {
            $(this).toggleClass('active');
            const option = $(this).data('option');
            const isActive = $(this).hasClass('active');

            if (option === 'images') {
                $('#copyImages').val(isActive ? 'true' : 'false');
            } else if (option === 'prompts') {
                $('#copyPrompts').val(isActive ? 'true' : 'false');
            }
        });

        // 프로젝트 추가 모달 이벤트
        $('#addProjectBtn').on('click', async function () {
            $('#addProjectModalOverlay').addClass('show');
            $('body').css('overflow', 'hidden');

            resetForm();
            validateAllFields();
        });

        $('#addProjectModalClose, #cancelProjectBtn').on('click', function () {
            $('#addProjectModalOverlay').removeClass('show');
            $('body').css('overflow', '');
            resetForm();
        });

        // 복제 모달 이벤트
        $('#copyProjectModalClose, #copyCancelBtn').on('click', function () {
            $('#copyProjectModalOverlay').removeClass('show');
            $('body').css('overflow', '');
            resetCopyForm();
            currentCopyProjectData = null;
        });

        // 입력 변화 감지
        $('#projectName, #targetAddress').on('input blur', function () {
            validateAllFields();
        });

        $('#copyProjectName').on('input blur', function () {
            validateAllCopyFields();
        });

        $('#dailyAmount, #totalAmount').on('input blur', function () {
            const daily = parseInt($('#dailyAmount').val(), 10) || 0;
            const total = parseInt($('#totalAmount').val(), 10) || 0;
            const $dailyField = $('#dailyAmount');
            const $dailyError = $dailyField.siblings('.error-message');

            if (daily > 0 && total > 0 && daily > total) {
                $dailyField.addClass('error');
                $dailyError.text('일 유입량이 총 유입량보다 클 수 없습니다.').addClass('show');
            } else {
                if (daily > 0) {
                    $dailyField.removeClass('error');
                    $dailyError.text('일 유입량을 입력해주세요.').removeClass('show');
                }
            }
            validateAllFields();
        });

        $('#copyDailyAmount, #copyTotalAmount').on('input blur', function () {
            const daily = parseInt($('#copyDailyAmount').val(), 10) || 0;
            const total = parseInt($('#copyTotalAmount').val(), 10) || 0;
            const $dailyField = $('#copyDailyAmount');
            const $dailyError = $dailyField.siblings('.error-message');

            if (daily > 0 && total > 0 && daily > total) {
                $dailyField.addClass('error');
                $dailyError.text('일 유입량이 총 유입량보다 클 수 없습니다.').addClass('show');
            } else {
                if (daily > 0) {
                    $dailyField.removeClass('error');
                    $dailyError.text('일 유입량을 입력해주세요.').removeClass('show');
                }
            }
            validateAllCopyFields();
        });

        // ============================================
        // 프로젝트 생성 API 연결
        // ============================================
        $('#submitProjectBtn').on('click', async function () {
            const dto = gatherProjectDTO();

            try {
                const response = await fetch('/api/project/create', {
                    method: 'POST',
                    headers: {'Content-Type': 'application/json'},
                    body: JSON.stringify(dto)
                });

                if (!response.ok) {
                    const errorMessage = await ErrorUtils.parseError(response);
                    throw new Error(errorMessage);
                }

                const projectId = await response.json();

                $('#addProjectModalOverlay').removeClass('show');
                $('body').css('overflow', '');
                showInfoToast('프로젝트가 성공적으로 생성되었습니다.');

                resetForm();
                loadProjects(1);

            } catch (error) {
                ErrorUtils.showError(error.message);
            }
        });

        // 복제하기 클릭
        $('#copySubmitBtn').on('click', async function () {
            try {
                const dto = gatherCopyProjectDTO();

                const res = await fetch('/api/v1/projects/duplicate', {
                    method: 'POST',
                    headers: {'Content-Type': 'application/json'},
                    body: JSON.stringify(dto),
                });

                if (!res.ok) {
                    const errorMessage = await ErrorUtils.parseError(res);
                    throw new Error(errorMessage);
                }

                $('#copyProjectModalOverlay').removeClass('show');
                $('body').css('overflow', '');
                showInfoToast('프로젝트가 성공적으로 복제되었습니다.');

                loadProjects(1);

            } catch (error) {
                ErrorUtils.showError(error.message);
            }
        });

        // 모달 오버레이 클릭 닫기
        $('.modal-overlay').on('click', function (e) {
            if (!($(this).hasClass('copy-project-modal') || $(this).hasClass('add-project-modal'))) {
                if (e.target === this) {
                    $(this).removeClass('show');
                    $('body').css('overflow', '');
                }
            }
        });

        // 초기 토글 상태 설정
        updateExcludeCompletedToggle();
    });

    // 전역 함수로 복제 모달 열기 함수 노출
    window.openCopyModal = openCopyModal;
</script>

<script>
    $('#headerTitle').text('대시보드');

    $(document).on('click', '.card-settings-button', function (e) {
        e.preventDefault();
        const $card = $(this).closest('.project-card');
        const projectId = $card.data('project-id');
        window.location.href = `/dashboard/${projectId}`;
    });

    $(document).on('click', '.card-report-button', function (e) {
        e.preventDefault();
        const $card = $(this).closest('.project-card');
        const projectId = $card.data('project-id');
        window.location.href = `/report/${projectId}`;
    });

    $(document).on('click', '.card-delete-icon', function (e) {
        e.preventDefault();

        const $card = $(this).closest('.project-card');
        const projectId = $card.data('project-id');

        showCustomAlert('프로젝트를 삭제하시겠어요?', `삭제시 모든 데이터가 즉시 소멸됩니다.<br><span style="font-size: 14px; color: #ef4444;">※ 금일 발행 건을 제외한 횟수가 자동 환불됩니다.</span>`, [
            {
                text: '삭제하기',
                class: 'alert-modal-button alert-modal-button-primary',
                action: function () {
                    loadPreloader(0);
                    $.ajax({
                        url: `/api/v1/projects/${projectId}/delete`,
                        method: 'POST',
                        contentType: 'application/json',
                        success: function () {
                            showCustomAlert('삭제 완료!', '프로젝트를 성공적으로 삭제 했습니다.', [{
                                text: '닫기',
                                class: 'alert-modal-button alert-modal-button-secondary',
                                action: function () {
                                    window.location.reload();
                                }
                            }]);
                        },
                        error: function (xhr) {
                            let msg = '프로젝트를 삭제할 수 없습니다.';
                            try {
                                if (xhr.responseJSON?.error?.message) {
                                    msg = xhr.responseJSON.error.message;
                                }
                            } catch (e) {
                            }
                            showCustomAlert('삭제 실패', msg);
                        },
                        complete: function () {
                            unLoadPreloader(1000);
                        }
                    });
                }
            },
            {
                text: '닫기',
                class: 'alert-modal-button alert-modal-button-secondary',
                action: function () {
                    hideCustomAlert();
                }
            }
        ]);
    });
</script>

<div class="alert-modal-overlay" id="alertModal">
    <div class="alert-modal-container">
        <h3 class="alert-modal-title" id="alertModalTitle"></h3>
        <p class="alert-modal-content" id="alertModalContent"></p>
        <div class="alert-modal-button-group" id="alertModalButtonGroup"></div>
    </div>
</div>

</body>
</html>
